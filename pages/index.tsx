import axios from "axios";
import Head from "next/head";
import { useEffect, useState } from "react";

// 0. Make a request for what years the api has data
// 1. Make buttons 1992 -> 2022

// When you click a button with a year, display the prizes for that year!
// 1. Make states ->
// - what year did the user click (query) year, setYear
// - the prizes for that year (from the api)

// 2. Detect when the user clicks (and what)
// 3. Call api
// 4. Save the prizes, display the prizes

export default function Home() {
  const [years, setYears] = useState<number[]>([]);
  const [year, setYear] = useState<number | null>(1992);
  const [prizes, setPrizes] = useState([]);

  // infinite loop
  // if (years.length === 0) {
  //   axios.get("https://ignoble-api.onrender.com/years").then((response) => {
  //     setYears(response.data.years);
  //   });
  // }

  useEffect(() => {
    async function getYears() {
      const response = await axios.get(
        "https://ignoble-api.onrender.com/years"
      );
      console.log(response.data.years);
      setYears(response.data.years);
    }

    getYears();
  }, []);

  useEffect(() => {
    const controller = new AbortController();
    console.log("EFFECT: USER CHANGED THE YEAR:", year);

    async function getPrizes() {
      setPrizes([]);
      try {
        const response = await axios.get(
          `https://ignoble-api.onrender.com/years/${year}/prizes`,
          {
            signal: controller.signal,
          }
        );
        console.log(response.data.prizes);

        setPrizes(response.data.prizes);
      } catch (error) {
        if (error.code === "ERR_CANCELED") {
          return; // this is ok
        } else {
          // handle this!
        }
      }
    }

    getPrizes();

    return () => {
      console.log("CLEANUP: CLEANUP FOR THIS YEAR:", year);
      controller.abort();
    };
  }, [year]);

  async function displayPrizes(year: number) {
    console.log("USER CLICKS:", year);
    setYear(year);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {years.map((year) => {
          return (
            <button key={year} onClick={() => displayPrizes(year)}>
              {year}
            </button>
          );
        })}
        <div>
          <h1>Prizes for: {year}</h1>
          {prizes.map((prize) => {
            return (
              <div key={prize.id}>
                <h2>{prize.category}</h2>
                <p>{prize.year}</p>
                <p>{prize.rationale}</p>
              </div>
            );
          })}
        </div>
      </main>
    </>
  );
}
